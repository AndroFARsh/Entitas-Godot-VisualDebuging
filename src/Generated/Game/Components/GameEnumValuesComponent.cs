//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnumValues;

    public static Entitas.IMatcher<GameEntity> EnumValues {
        get {
            if (_matcherEnumValues == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnumValues);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnumValues = matcher;
            }

            return _matcherEnumValues;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Godot.EnumValuesComponent enumValues { get { return (Entitas.Godot.EnumValuesComponent)GetComponent(GameComponentsLookup.EnumValues); } }
    public bool hasEnumValues { get { return HasComponent(GameComponentsLookup.EnumValues); } }

    public GameEntity AddEnumValues(Entitas.Godot.ValueTestEnum newValueEnum, Entitas.Godot.FlagTestEnum newFlagEnum) {
        var index = GameComponentsLookup.EnumValues;
        var component = (Entitas.Godot.EnumValuesComponent)CreateComponent(index, typeof(Entitas.Godot.EnumValuesComponent));
        component.ValueEnum = newValueEnum;
        component.FlagEnum = newFlagEnum;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceEnumValues(Entitas.Godot.ValueTestEnum newValueEnum, Entitas.Godot.FlagTestEnum newFlagEnum) {
        var index = GameComponentsLookup.EnumValues;
        var component = (Entitas.Godot.EnumValuesComponent)CreateComponent(index, typeof(Entitas.Godot.EnumValuesComponent));
        component.ValueEnum = newValueEnum;
        component.FlagEnum = newFlagEnum;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveEnumValues() {
        RemoveComponent(GameComponentsLookup.EnumValues);
        return this;
    }
}
