//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMultiValues1;

    public static Entitas.IMatcher<GameEntity> MultiValues1 {
        get {
            if (_matcherMultiValues1 == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MultiValues1);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMultiValues1 = matcher;
            }

            return _matcherMultiValues1;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Godot.MultiValues1Component multiValues1 { get { return (Entitas.Godot.MultiValues1Component)GetComponent(GameComponentsLookup.MultiValues1); } }
    public bool hasMultiValues1 { get { return HasComponent(GameComponentsLookup.MultiValues1); } }

    public GameEntity AddMultiValues1(int newIntValue, long newLongValue, float newFloatValue, double newDoubleValue, string newStringValue, Godot.Vector2 newVector2Value, Godot.Vector2I newVector2IValue, Godot.Rect2 newRect2Value, Godot.Rect2I newRect2IValue) {
        var index = GameComponentsLookup.MultiValues1;
        var component = (Entitas.Godot.MultiValues1Component)CreateComponent(index, typeof(Entitas.Godot.MultiValues1Component));
        component.IntValue = newIntValue;
        component.LongValue = newLongValue;
        component.FloatValue = newFloatValue;
        component.DoubleValue = newDoubleValue;
        component.StringValue = newStringValue;
        component.Vector2Value = newVector2Value;
        component.Vector2IValue = newVector2IValue;
        component.Rect2Value = newRect2Value;
        component.Rect2IValue = newRect2IValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceMultiValues1(int newIntValue, long newLongValue, float newFloatValue, double newDoubleValue, string newStringValue, Godot.Vector2 newVector2Value, Godot.Vector2I newVector2IValue, Godot.Rect2 newRect2Value, Godot.Rect2I newRect2IValue) {
        var index = GameComponentsLookup.MultiValues1;
        var component = (Entitas.Godot.MultiValues1Component)CreateComponent(index, typeof(Entitas.Godot.MultiValues1Component));
        component.IntValue = newIntValue;
        component.LongValue = newLongValue;
        component.FloatValue = newFloatValue;
        component.DoubleValue = newDoubleValue;
        component.StringValue = newStringValue;
        component.Vector2Value = newVector2Value;
        component.Vector2IValue = newVector2IValue;
        component.Rect2Value = newRect2Value;
        component.Rect2IValue = newRect2IValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveMultiValues1() {
        RemoveComponent(GameComponentsLookup.MultiValues1);
        return this;
    }
}
