//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIntType;

    public static Entitas.IMatcher<GameEntity> IntType {
        get {
            if (_matcherIntType == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.IntType);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIntType = matcher;
            }

            return _matcherIntType;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Godot.IntTypeComponent intType { get { return (Entitas.Godot.IntTypeComponent)GetComponent(GameComponentsLookup.IntType); } }
    public int IntType { get { return intType.Value; } }
    public bool hasIntType { get { return HasComponent(GameComponentsLookup.IntType); } }

    public GameEntity AddIntType(int newValue) {
        var index = GameComponentsLookup.IntType;
        var component = (Entitas.Godot.IntTypeComponent)CreateComponent(index, typeof(Entitas.Godot.IntTypeComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceIntType(int newValue) {
        var index = GameComponentsLookup.IntType;
        var component = (Entitas.Godot.IntTypeComponent)CreateComponent(index, typeof(Entitas.Godot.IntTypeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveIntType() {
        RemoveComponent(GameComponentsLookup.IntType);
        return this;
    }
}
