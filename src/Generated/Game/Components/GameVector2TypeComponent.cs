//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVector2Type;

    public static Entitas.IMatcher<GameEntity> Vector2Type {
        get {
            if (_matcherVector2Type == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Vector2Type);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVector2Type = matcher;
            }

            return _matcherVector2Type;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Godot.Vector2TypeComponent vector2Type { get { return (Entitas.Godot.Vector2TypeComponent)GetComponent(GameComponentsLookup.Vector2Type); } }
    public Godot.Vector2 Vector2Type { get { return vector2Type.Value; } }
    public bool hasVector2Type { get { return HasComponent(GameComponentsLookup.Vector2Type); } }

    public GameEntity AddVector2Type(Godot.Vector2 newValue) {
        var index = GameComponentsLookup.Vector2Type;
        var component = (Entitas.Godot.Vector2TypeComponent)CreateComponent(index, typeof(Entitas.Godot.Vector2TypeComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceVector2Type(Godot.Vector2 newValue) {
        var index = GameComponentsLookup.Vector2Type;
        var component = (Entitas.Godot.Vector2TypeComponent)CreateComponent(index, typeof(Entitas.Godot.Vector2TypeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveVector2Type() {
        RemoveComponent(GameComponentsLookup.Vector2Type);
        return this;
    }
}
